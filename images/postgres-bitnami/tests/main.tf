terraform {
  required_providers {
    oci       = { source = "chainguard-dev/oci" }
    imagetest = { source = "chainguard-dev/imagetest" }
  }
}

variable "digest" {
  description = "The image digest to run tests over."
}

data "oci_string" "ref" { input = var.digest }

data "imagetest_inventory" "this" {}

resource "imagetest_harness_k3s" "this" {
  name      = "postgres"
  inventory = data.imagetest_inventory.this

  sandbox = {
    envs = {
      "NAME" : "postgres"
      "NAMESPACE" : "postgres"
    }
    mounts = [{
      source      = path.module
      destination = "/tests"
    }]
  }
}

module "helm" {
  source = "../../../tflib/imagetest/helm"

  name      = "postgres"
  namespace = "postgres"
  chart     = "oci://registry-1.docker.io/bitnamicharts/postgresql"

  # https://artifacthub.io/packages/helm/bitnami/postgresql#securing-traffic-using-tls
  values = {
    image = {
      registry   = data.oci_string.ref.registry
      repository = data.oci_string.ref.repo
      tag        = data.oci_string.ref.pseudo_tag
      digest     = data.oci_string.ref.digest
    }
    volumePermissions = {
      enabled = true
    }
    tls = {
      enabled       = true
      autoGenerated = true
    }
  }
}

resource "imagetest_feature" "basic" {
  harness     = imagetest_harness_k3s.this
  name        = "Basic"
  description = "Basic functionality of the Postgres Helm chart."

  steps = [
    {
      name = "Install Helm chart"
      cmd  = module.helm.install_cmd
    },
    {
      name    = "Postgres TLS test"
      workdir = "/tests"
      cmd     = <<EOF
        ./tls.sh
      EOF
    },
  ]

  labels = {
    type = "k8s"
  }
}
